# Version of swagger: "2.0"
swagger: '2.0'

info:
  description: |
    An API of an e-shop for Paintings, in the swagger-2.0 specification
  version: "0.0.1"
  title: Swagger E-shop Urban Picasso
  contact:
    name: Eletheriou Christina, Petros Tanos
    email: xristinaele@hotmail.com
consumes: 
  - application/json
produces:
  - application/json

definitions:
  
  customer:
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
  
  newCustomer:
    type: object
    required:
      - name
    properties:
      name:
        type: string

  salesman:
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
  
  newSalesman:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        
  painting:
    type: object
    required:
      - id
      - name
      - artist
      - price
      - Category
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
  
paths:
  /customers:
    get:
      description: Gets customers of online e-shop
      parameters:
        - name: _sort
          in: query
          required: false
          type: string
        - name: _order
          in: query
          required: false
          type: string
      responses:
        200:
          description: Customers succesfully retrieved
          schema:
            type: array
            items:
              $ref: '#/definitions/customer'
    post:
      description: Create a new customer
      operationId: addCustomer
      parameters:
        - name: customer
          in: body
          required: true
          description: Customer to add to the eshop
          schema:
            $ref: '#/definitions/newCustomer'
      responses:
        201:
          description: Customer created  
  
  /customers/{customerID}:
    parameters:
      - name: customerID
        in: path
        required: true
        type: integer
        format: int64
    get:
      description: Get a customer with *customerID*
      responses:
        200:
          description: Customer succesfully retrieved
          schema:
            $ref: '#/definitions/customer'
        404:
          description: Customer not found
    delete:
      description: Delete a customer with *customerID*
      responses:
        200:
          description: Customer deleted 
          schema:
            $ref: '#/definitions/customer'
        404:
          description: Customer not found
    put:
      description: Update a customer with *customerID*
      operationId: updateCustomer
      parameters:
        - name: customer
          in: body
          required: true
          description: Updates
          schema:
            $ref: '#/definitions/newCustomer'
      responses:
        200:
          description: Customer updated
          schema:
            $ref: '#/definitions/customer'
        404:
          description: Customer not found  
  
  /customers/{customerName}:
    parameters:
      - name: customerName
        in: path
        required: true
        type: string
    get:
      description: Get a customer with *customerName*
      responses:
        200:
          description: Customer succesfully retrieved
          schema:
            $ref: '#/definitions/customer'
        404:
          description: Customer not found
    delete:
      description: Delete a customer with *customerName*
      responses:
        200:
          description: Customer deleted 
          schema:
            $ref: '#/definitions/customer'
        404:
          description: Customer not found
    put:
      description: Update a customer with *customerName*
      operationId: updateCustomer
      parameters:
        - name: customer
          in: body
          required: true
          description: Updates
          schema:
            $ref: '#/definitions/newCustomer'
      responses:
        200:
          description: Customer updated
          schema:
            $ref: '#/definitions/customer'
        404:
          description: Customer not found  
  /salesmen:
    get:
      description: Gets salesmen
      parameters:
        - name: _sort
          in: query
          required: false
          type: string
        - name: _order
          in: query
          required: false
          type: string
      responses:
        200:
          description: Salesmen succesfully retrieved
          schema:
            type: array
            items:
              $ref: '#/definitions/salesman'
    post:
      description: Create a new salesman
      operationId: addSalesman
      parameters:
        - name: salesman
          in: body
          required: true
          description: Salesman to add to the eshop
          schema:
            $ref: '#/definitions/newSalesman'
      responses:
        201:
          description: Salesman created  
  /painting:
    post:
      description: Add a new painting to the e-shop
      operationId: addPainting
      parameters:
        - in: body
          name: body
          description: Painting that needs to be added to the e-shop
          required: false
          schema:
            $ref: "#/definitions/painting"
      responses:
        "405":
          description: Invalid input
    put:
      description: Update an existing painting
      operationId: updatePainting
      parameters:
        - in: body
          name: body
          description: Painting that needs to be added to the e-shop
          required: false
          schema:
            $ref: "#/definitions/painting"
      responses:
        "405":
          description: Validation exception
        "404":
          description: Painting not found
        "400":
          description: Invalid ID supplied
  /painting/findByCategory:
    get:
      description: Finds Paintings by Category
      operationId: findPaintBycategory
      parameters:
        - in: query
          name: status
          description: Category values that need to be considered for filter
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/painting"
        "400":
          description: Invalid Category value
  /painting/findByArtist:
    get:
      description: Finds Paintings by Artist
      operationId: findPaintsByArtist
      parameters:
        - in: query
          name: painId
          description: Artist to filter by
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/painting"
        "400":
          description: Invalid Artist name
  /painting/{paintId}:
      description: Find paint by ID/Name and returns a painting when the ID/Name is correct
      operationId: getPaintById
      parameters:
        - in: path
          name: paintId
          description: ID of paint 
          required: true
          type: integer
          format: int64
      responses:
        "404":
          description: Painting not found
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/painting"
        "400":
          description: Invalid ID supplied
    post:
      description: Updates a painting in the e-shop 
      operationId: updatePaint
      parameters:
        - in: path
          name: paintId
          description: ID of paint that needs to be updated
          required: true
          type: string
        - in: formData
          name: name
          description: Updated name of the paint
          required: true
          type: string
        - in: formData
          name: status
          description: Updated details of the painting
          required: true
          type: string
      responses:
        "405":
          description: Invalid input

    delete:
      description: Delete a Painting
      operationId: deletePaint
      parameters:
        - in: header
          name: api_key
          description: ""
          required: true
          type: string
        - in: path
          name: paintId
          description: Paint id to delete
          required: true
          type: integer
          format: int64
      responses:
        "400":
          description: Invalid paint value
          
